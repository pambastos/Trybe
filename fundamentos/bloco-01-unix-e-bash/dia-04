
Navegue at√© a pasta unix_tests ;
cd unix_tests

Crie um arquivo texto pelo terminal com o nome skills2.txt e adicione os valores Internet , Unix e Bash , um em cada linha.
touch skills2.txt
echo "Internet" >> skills2.txt
echo "Unix" >> skills2.txt
echo "Bash" >> skills2.txt

Adicione mais 5 itens √† sua lista de skills e depois imprima a lista ordenada no terminal. ü§ì
echo "HTML" >> skills2.txt
echo "CSS" >> skills2.txt
echo "JavaScript" >> skills2.txt
echo "React" >> skills2.txt
echo "SQL" >> skills2.txt
sort < skills2.txt

Conte quantas linhas tem o arquivo skills2.txt .
cat skills2.txt | wc -l

Crie um arquivo chamado top_skills.txt usando o skills2.txt , contendo as 3 primeiras skills em ordem alfab√©tica.
sort < skills2.txt | head -n 3 > top_skills.txt

Crie um novo arquivo chamado phrases2.txt pelo terminal e adicione algumas frases de sua escolha.
touch phrases2.txt
echo "A trybe √© demais."> phrases2.txt
echo "Vou me formar em fevereiro.">> phrases2.txt
echo "Javascript √© muito dif√≠cil." >> phrases2.txt

Conte o n√∫mero de linhas que cont√™m as letras br .
grep br phrases2.txt | wc -l

Conte o n√∫mero de linhas que n√£o cont√™m as letras br .
grep -v br phrases2.txt | wc -l

Adicione dois nomes de pa√≠ses ao final do arquivo phrases2.txt .
echo "Jap√£o" >> phrases2.txt
echo "Austr√°lia" >> phrases2.txt

Crie um novo arquivo chamado bunch_of_things.txt com os conte√∫dos dos arquivos phrases2.txt e countries.txt
cp countries.txt bunch_of_things.txt
cat phrases2.txt >> bunch_of_things.txt

Ordene o arquivo bunch_of_things.txt .
sort bunch_of_things.txt -o bunch_of_things.txt

Navegue at√© a pasta unix_tests ;
cd unix_tests

Rode o comando ls -l e veja quais as permiss√µes dos arquivos;
ls -l

Mude a permiss√£o do arquivo bunch_of_things.txt para que todos os usu√°rios possam ter acesso √† leitura e escrita, e verifique se est√° correto com o comando ls -l ;
chmod a+rw bunch_of_things.txt
ls -l

Resultado esperado: -rw-rw-rw- 1 ana ana 1860 ago 13 11:39 bunch_of_things.txt

Tire a permiss√£o de escrita do arquivo bunch_of_things.txt para todos os usu√°rios, verifique se est√° correto com o comando ls -l ;
chmod a-w bunch_of_things.txt
ls -l

Resultado esperado: -r--r--r-- 1 ana ana 1860 ago 13 11:39 bunch_of_things.txt

Volte √† permiss√£o do arquivo bunch_of_things.txt para a listada inicialmente utilizando o comando chmod 644 bunch_of_things.txt .
chmod 644 bunch_of_things.txt
ls -l

Resultado esperado: -rw-r--r-- 1 ana ana 1860 ago 13 11:39 bunch_of_things.txt

Liste todos os processos;
ps

Agora use o comando sleep 30 & ;
sleep 30 &

Use a listagem de processos para encontrar o PID do processo que est√° executando o comando sleep 30 e termine a sua execu√ß√£o (mate o processo) ;
ps | grep sleep
kill 1234 

Execute novamente o comando sleep 30 , mas agora sem o & . Depois, fa√ßa com que ele continue executando em background;
sleep 30
bg

Crie um processo em background que rode o comando sleep por 300 segundos.
sleep 300 &

Crie mais dois processos que rodem o comando sleep por 200 e 100 segundos, respectivamente.
sleep 200
sleep 100

Voc√™ deve cri√°-los em foreground (sem usar o & ) e suspend√™-los (apertando ctrl+z ) ap√≥s cada um come√ßar a executar.

Verifique que apenas o processo sleep 300 est√° em execu√ß√£o com o comando jobs . Suspenda a execu√ß√£o desse processo.
jobs

Voc√™ vai precisar trazer o processo para foreground ( fg ) e suspend√™-lo ( ctrl+z ), ou enviar um sinal.

Retome a execu√ß√£o do processo sleep 100 em background com o comando bg .
bg %3

Termine a execu√ß√£o de todos os processos sleep (mate os processos) .
killall sleep
